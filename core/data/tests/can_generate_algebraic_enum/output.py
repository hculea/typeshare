"""
 Generated by typeshare 1.11.0
"""
from __future__ import annotations

from enum import Enum
from pydantic import BaseModel
from typing import List, Literal, Union


class ItemDetailsFieldValue(BaseModel):
    """
    Struct comment
    """
    pass

class AdvancedColorsTypes(str, Enum):
    STRING = "String"
    NUMBER = "Number"
    UNSIGNED_NUMBER = "UnsignedNumber"
    NUMBER_ARRAY = "NumberArray"
    REALLY_COOL_TYPE = "ReallyCoolType"

class AdvancedColorsString(BaseModel):
    content: str

class AdvancedColorsNumber(BaseModel):
    content: int

class AdvancedColorsUnsignedNumber(BaseModel):
    content: int

class AdvancedColorsNumberArray(BaseModel):
    content: List[int]

class AdvancedColorsReallyCoolType(BaseModel):
    content: ItemDetailsFieldValue

class AdvancedColors(BaseModel):
    model_config = ConfigDict(use_enum_values=True)
    type: AdvancedColorsTypes
    content: Union[AdvancedColorsString, AdvancedColorsNumber, AdvancedColorsUnsignedNumber, AdvancedColorsNumberArray, AdvancedColorsReallyCoolType]

class AdvancedColors2Types(str, Enum):
    STRING = "string"
    NUMBER = "number"
    NUMBER_ARRAY = "number-array"
    REALLY_COOL_TYPE = "really-cool-type"

class AdvancedColors2String(BaseModel):
    content: str

class AdvancedColors2Number(BaseModel):
    content: int

class AdvancedColors2NumberArray(BaseModel):
    content: List[int]

class AdvancedColors2ReallyCoolType(BaseModel):
    content: ItemDetailsFieldValue

class AdvancedColors2(BaseModel):
    model_config = ConfigDict(use_enum_values=True)
    type: AdvancedColors2Types
    content: Union[AdvancedColors2String, AdvancedColors2Number, AdvancedColors2NumberArray, AdvancedColors2ReallyCoolType]

